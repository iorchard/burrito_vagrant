# -*- mode: ruby -*-
# vi: set ft=ruby :

Control = {
  'num' => 3,
  'name_prefix' => 'control',
  'cpus' => 8,
  'memory' => 16,
  'disk' => 50
}
Compute = {
  'num' => 2,
  'name_prefix' => 'compute',
  'cpus' => 4,
  'memory' => 8,
  'disk' => 50
}
Storage = {
  'num' => 3,
  'name_prefix' => 'storage',
  'cpus' => 4,
  'memory' => 8,
  'disk' => 50
}

OSD_SIZE = '50GB'

# last octet of each ip address. See NET variable below.
IP = 11
# Box name 
BOX = 'iorchard/burrito'
# Box version: you can check the latest version at
# https://portal.cloud.hashicorp.com/vagrant/discover/iorchard/burrito/versions
BOX_VERSION = '2.1.0'

#################################################
### Do not edit below if you are not an expert.
#################################################

USERNAME = 'clex'
# libvirt storage pool name
POOL="default"
ENV['VAGRANT_DEFAULT_PROVIDER'] = 'libvirt'
NET = {
  'service' => '192.168.10.',
  'mgmt' => '192.168.20.',
  'provider' => '192.168.30.',
  'overlay' => '192.168.40.',
  'storage' => '192.168.50.'
}
File.write("etchosts", "127.0.0.1 localhost\n")
s_etchostsall = "127.0.0.1 localhost\n"
(1..Control['num']).each do |i|
  n = IP+(i-1)
  s_etchostsall += NET['mgmt'] + "#{n} " + Control['name_prefix'] + "#{i}\n"
end
(1..Compute['num']).each do |i|
  n = IP+Control['num']+(i-1)
  s_etchostsall += NET['mgmt'] + "#{n} " + Compute['name_prefix'] + "#{i}\n"
end
(1..Storage['num']).each do |i|
  n = IP+Control['num']+Compute['num']+(i-1)
  s_etchostsall += NET['mgmt'] + "#{n} " + Storage['name_prefix'] + "#{i}\n"
end
File.write("etchostsall", s_etchostsall)

$script = <<-'SHELL'
sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' \
  /etc/ssh/sshd_config
systemctl restart sshd.service
sudo mv hosts /etc/hosts
growpart /dev/sda 1
xfs_growfs /dev/sda1
reboot
SHELL

Vagrant.configure("2") do |config|
  config.vm.box = BOX
  config.vm.box_version = BOX_VERSION
  config.ssh.username = USERNAME
  config.vm.synced_folder ".", "/vagrant", disabled: true
  (1..Control['num']).each do |i|
    n = IP+(i-1)
    config.vm.define Control['name_prefix']+"#{i}" do |cfg|
      cfg.vm.provider "libvirt" do |libvirt|
        libvirt.cpus = Control['cpus']
        libvirt.memory = Control['memory'] * 1024
        libvirt.graphics_type = "none"
        libvirt.management_network_name = "service"
        libvirt.management_network_address = NET['service'] + "0/24"
        libvirt.management_network_mode = "nat"
        libvirt.storage_pool_name = POOL
        libvirt.machine_virtual_size = Control['disk']
        libvirt.disk_bus = 'scsi'
        libvirt.disk_device = 'sda'
      end
      cfg.vm.host_name = Control['name_prefix'] + "#{i}"
      cfg.vm.network "private_network", ip: NET['mgmt'] + "#{n}",
        libvirt__network_name: "mgmt",
        libvirt__forward_mode: "none"
      cfg.vm.network "private_network", ip: NET['provider'] + "#{n}",
        libvirt__network_name: "provider",
        libvirt__forward_mode: "nat"
      cfg.vm.network "private_network", ip: NET['overlay'] + "#{n}",
        libvirt__network_name: "overlay",
        libvirt__forward_mode: "none"
      cfg.vm.network "private_network", ip: NET['storage'] + "#{n}",
        libvirt__network_name: "storage",
        libvirt__forward_mode: "none"
      cfg.vm.network "forwarded_port", guest: 22, host: 60000+n,
        host_ip: "127.0.0.1"
      cfg.vm.provision "file", source: "ifcfg-eth3",
        destination: "/etc/sysconfig/network-scripts/ifcfg-eth3"
      if i == 1
        cfg.vm.provision "shell", inline: "touch /tmp/i_am_the_first_controller"
        cfg.vm.provision "file", source: "etchostsall", destination: "hosts"
      else
        cfg.vm.provision "file", source: "etchosts", destination: "hosts"
      end
      cfg.vm.provision "shell", inline: $script
    end
  end

  (1..Compute['num']).each do |i|
    n = (IP+Control['num'])+(i-1)
    config.vm.define Compute['name_prefix']+"#{i}" do |cfg|
      cfg.vm.provider "libvirt" do |libvirt|
        libvirt.cpus = Compute['cpus']
        libvirt.memory = Compute['memory']*1024
        libvirt.graphics_type = "none"
        libvirt.nested = true
        libvirt.cpu_mode = "host-passthrough"
        libvirt.management_network_name = "service"
        libvirt.management_network_address = NET['service'] + "0/24"
        libvirt.management_network_mode = "nat"
        libvirt.storage_pool_name = POOL
        libvirt.machine_virtual_size = Compute['disk']
        libvirt.disk_bus = 'scsi'
        libvirt.disk_device = 'sda'
      end
      cfg.vm.host_name = Compute['name_prefix'] + "#{i}"
      cfg.vm.network "private_network", ip: NET['mgmt'] + "#{n}",
        libvirt__network_name: "mgmt"
      cfg.vm.network "private_network", ip: NET['provider'] + "#{n}",
        libvirt__network_name: "provider"
      cfg.vm.network "private_network", ip: NET['overlay'] + "#{n}",
        libvirt__network_name: "overlay"
      cfg.vm.network "private_network", ip: NET['storage'] + "#{n}",
        libvirt__network_name: "storage"
      cfg.vm.network "forwarded_port", guest: 22, host: 60000+n,
        host_ip: "127.0.0.1"
      cfg.vm.provision "file", source: "ifcfg-eth3",
        destination: "/etc/sysconfig/network-scripts/ifcfg-eth3"
      cfg.vm.provision "file", source: "etchosts",
        destination: "hosts"
      cfg.vm.provision "shell", inline: $script
    end
  end

  (1..Storage['num']).each do |i|
    n = IP+Control['num']+Compute['num']+(i-1)
    config.vm.define Storage['name_prefix']+"#{i}" do |cfg|
      cfg.vm.provider "libvirt" do |libvirt|
        libvirt.cpus = Storage['cpus']
        libvirt.memory = Storage['memory']*1024
        libvirt.graphics_type = "none"
        libvirt.management_network_name = "service"
        libvirt.management_network_address = NET['service'] + "0/24"
        libvirt.management_network_mode = "nat"
        libvirt.storage :file, :device => 'sdb', :size => OSD_SIZE, :bus => 'scsi'
        libvirt.storage :file, :device => 'sdc', :size => OSD_SIZE, :bus => 'scsi'
        libvirt.storage :file, :device => 'sdd', :size => OSD_SIZE, :bus => 'scsi'
        libvirt.storage_pool_name = POOL
        libvirt.machine_virtual_size = 100
        libvirt.disk_bus = 'scsi'
        libvirt.disk_device = 'sda'
      end
      cfg.vm.host_name = Storage['name_prefix'] + "#{i}"
      cfg.vm.network "private_network", ip: NET['mgmt'] + "#{n}",
        libvirt__network_name: "mgmt"
      cfg.vm.network "private_network", ip: NET['provider'] + "#{n}",
        libvirt__network_name: "provider"
      cfg.vm.network "private_network", ip: NET['overlay'] + "#{n}",
        libvirt__network_name: "overlay"
      cfg.vm.network "private_network", ip: NET['storage'] + "#{n}",
        libvirt__network_name: "storage"
      cfg.vm.network "forwarded_port", guest: 22, host: 60000+n,
        host_ip: "127.0.0.1"
      cfg.vm.provision "file", source: "ceph-ifcfg-eth2",
        destination: "/etc/sysconfig/network-scripts/ifcfg-eth2"
      cfg.vm.provision "file", source: "ifcfg-eth3",
        destination: "/etc/sysconfig/network-scripts/ifcfg-eth3"
      cfg.vm.provision "file", source: "etchosts",
        destination: "hosts"
      cfg.vm.provision "shell", inline: $script
    end
  end
end
